openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger
  license:
    name: MIT
servers:
  - url: http://localhost:8080
paths:
  /branches:
    get:
      summary: List all branches
      operationId: listBranches
      tags:
        - branches
      responses:
        '200':
          description: Array of branches
          headers:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Branches"
    post:
      summary: Add branch
      operationId: addBranch
      tags:
        - branches
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                location:
                  type: string
                  example: Barcelona
                customers:
                  type: string
                  example: 1,2
              required:
                - location
      responses:
        '200':
          description: Null response
  /branches/{id}:
    get:
      summary: List all branches
      operationId: listBranches
      tags:
        - branches
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The branch ID
      responses:
        '200':
          description: Array of branches
          headers:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Branch"
  /customers:
    get:
      summary: List all customers
      operationId: listCustomers
      tags:
        - customers
      responses:
        '200':
          description: Array of customers
          headers:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customers"
    post:
      summary: Add customer
      operationId: addCustomer
      tags:
        - customers
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Bruce
                balance:
                  type: float
                  example: 750000
              required:
                - name
      responses:
        '200':
          description: Null response
  /customers/{id}:
    get:
      summary: Customer
      operationId: getCustomer
      tags:
        - customers
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The customer ID
      responses:
        '200':
          description: Customer
          headers:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
  /transactions/sender/{senderId}/receiver/{receiverId}:
    post:
      summary: Make transaction
      operationId: transaction
      tags:
        - transactions
      parameters:
        - in: path
          name: senderId
          required: true
          schema:
            type: integer
            minimum: 1
          description: The customer ID
        - in: path
          name: receiverId
          required: true
          schema:
            type: integer
            minimum: 1
          description: The customer ID
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                amount:
                  type: float
                  example: 5000,00
              required:
                - amount
      responses:
        '200':
          description: Null response

components:
  schemas:
    Branch:
      type: string
      required:
        - id
        - location
        - created_at
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Branches:
      type: string
      items:
        $ref: "#/components/schemas/Branch"
    Customer:
      type: string
      required:
        - id
        - name
        - balance
        - branch_id
        - created_at
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
      Customers:
        type: string
        items:
          $ref: "#/components/schemas/Customer"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string